{"version":3,"sources":["components/Today/Today.js","globals/dates.js","utilities/formatLabelGroups.js","utilities/storage.js","utilities/handleZoom.js","utilities/daysBetween.js","utilities/monthsBetween.js","data/timelineItems.js","globals/prefix.js","components/TimelineContainer/TimelineContainer.js","components/TimelineEvents/TimelineEvents.js","components/Button/Button.js","components/Zoom/Zoom.js","components/Timeline/Timeline.js","utilities/assignLanes.js","components/ThemeSwitcher/ThemeSwitcher.js","components/Modal/Modal.js","components/Input/Input.js","components/EventEditor/EventEditor.js","components/Controls/Controls.js","components/Header/Header.js","index.js","utilities/reformatDates.js"],"names":["scrollState","clickedToday","months","days","formatGroupLabel","type","date","getFullYear","getMonth","formatItemLabel","substring","getDate","formatItemLabelTitle","getDay","createGroups","start","end","groups","now","Date","groupItems","next","last","setMonth","setDate","push","label","items","labelTitle","active","toDateString","setStorage","name","data","JSON","stringify","localStorage","setItem","getStorage","parse","getItem","mobileWidth","handleZoom","zoom","up","interval","typeCounts","window","innerWidth","types","Object","keys","count","counts","countIndex","indexOf","typeIndex","length","resetValue","height","max","min","defaultZoomLevel","daysBetween","startDate","endDate","Math","round","getTotalDaysInMonth","monthsBetween","offset","totalDays","offsetByDays","timelineItems","id","prefix","TimelineContainer","manageEditor","children","onScroll","inView","className","map","onClick","newEvent","data-date","classNames","title","style","width","e","target","dataset","isOpen","TimelineEvents","startRangeDate","lanes","useState","hideEvents","setHideEvents","useEffect","console","log","lane","i","event","gutter","itemSpan","itemOffset","expired","expiredClass","expiredText","minHeight","left","top","borderRadius","transitionDelay","data-event","editEvent","Button","href","otherProps","CompBtn","init","Zoom","onZoom","setZoom","screenSize","setScreenSize","changeZoom","upDown","newZoom","addEventListener","aria-label","disabled","rangeChanged","centered","Timeline","events","storedZoom","floor","startRange","setStartRange","endRange","setEndRange","timelineBg","document","querySelector","scrollWidth","offsetWidth","scroll","infinityScroll","item","querySelectorAll","itemWidth","updateBy","scrollLeft","sortedItems","sort","a","b","assignItemToLane","assignLanes","filter","dateInRange","organizeEvents","zoomLevel","ThemeSwitcher","theme","setTheme","body","classList","add","remove","checked","onChange","Modal","onClose","settings","open","closeModal","Input","EventEditor","setEvents","editorStatus","actionTitle","random","close","onSubmit","preventDefault","getData","getEventIndex","htmlFor","defaultValue","placeholder","splice","form","formData","FormData","entries","key","value","ref","forEach","Today","setDisabled","listenForScroll","offsetLeft","behavior","handleDisable","clearInterval","setTimeout","removeEventListener","Controls","storedTitle","val","Header","onKeyUp","innerText","suppressContentEditableWarning","contentEditable","defaultEvents","startSplit","split","endSplit","shift","join","App","setEditorStatus","status","render","getElementById"],"mappings":"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","file":"static/js/main.a126ff47.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { prefix } from '../../globals';\nimport { setStorage, getStorage } from '../../utilities';\nimport classNames from 'classnames';\nimport Button from '../Button/Button';\nimport \"./index.scss\";\n\nlet scrollState, clickedToday;\n\n/**\n * Resets the current view back to the centered active state of today.\n * @returns renders button\n */\nconst Today = () => {\n\n  const [disabled, setDisabled] = useState(true);\n\n  useEffect(listenForScroll, []);\n\n  return (\n    <Button\n      onClick={centerActiveState}\n      disabled={disabled}>\n      Today\n    </Button>\n  );\n\n  // offsets scroll area when clicked to center active item\n  function centerActiveState () {\n    const timelineBg = document.querySelector(`.${prefix}--timeline-bg`);\n    const active = timelineBg.querySelector(`.${prefix}--timeline-bg--item-active`);\n\n    timelineBg.scroll({\n      left: active.offsetLeft - ((timelineBg.offsetWidth - active.offsetWidth) / 2),\n      behavior: 'smooth'\n    });\n\n    setDisabled(true);\n\n    listenForScroll();\n  }\n\n  // determines when to enable the button on scroll\n  function handleDisable (e) {\n    const timelineBg = e.target;\n\n    clearInterval(scrollState);\n\n    scrollState = setTimeout(() => {\n      if (clickedToday) {\n        clickedToday = false;\n      }\n    }, 200);\n\n    if (!clickedToday) {\n       setDisabled(false);\n       timelineBg.removeEventListener('scroll', handleDisable);\n     }\n  }\n\n  // starts the event listener for scroll\n  function listenForScroll () {\n    const timelineBg = document.querySelector(`.${prefix}--timeline-bg`);\n    clickedToday = true;\n    timelineBg.addEventListener('scroll', handleDisable);\n  }\n}\n\nexport default Today;\n","export const months = ['January','February','March','April','May','June','July',\n            'August','September','October','November','December'];\n\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n","import { dayInMs } from './';\nimport { months, days } from '../globals/dates';\n\n/**\n * formats a group label (e.g. June 2021)\n * @returns returns string\n */\nexport const formatGroupLabel = (type, date) => {\n  switch (type) {\n    case 'month':\n      return `${date.getFullYear()}`;\n      break;\n    default:\n      return `${months[date.getMonth()]} ${date.getFullYear()}`;\n  }\n}\n\n/**\n * formats an item label (e.g. Monday, June 23, 2021)\n * @returns returns string\n */\nexport const formatItemLabel = (type, date) => {\n  switch (type) {\n    case 'month':\n      return `${months[date.getMonth()].substring(0,3)}`;\n      break;\n    default:\n      return `${date.getDate()}`;\n  }\n}\n\n/**\n * formats an item label title attribute (e.g. Monday, June 23, 2021)\n * @returns returns string\n */\nexport const formatItemLabelTitle = (type, date) => {\n  switch (type) {\n    case 'month':\n      return `${months[date.getMonth()]} ${date.getFullYear()}`;\n      break;\n    default:\n      return `${days[date.getDay()]}, ${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n  }\n}\n\n/**\n * creates and formats a group of labels based on a date range\n * @returns returns array of objects\n */\nexport const createGroups = (type, start, end) => {\n  const groups = [];\n  const now = new Date();\n  let groupItems = [];\n  let next = new Date(start);\n  let last = new Date(start);\n  let i = 0;\n\n  while (next < end) {\n    if (type === 'month') {\n      next.setMonth(next.getMonth() + 1);\n      now.setDate(1);\n    } else {\n      next.setDate(next.getDate() + 1);\n    }\n\n    if (type === 'day' && last.getMonth() !== next.getMonth()) {\n      groups.push({\n        label: formatGroupLabel(type, last),\n        items: groupItems\n      });\n      groupItems = [];\n    } else if (type === 'month' && last.getFullYear() !== next.getFullYear()) {\n      groups.push({\n        label: formatGroupLabel(type, last),\n        items: groupItems\n      });\n      groupItems = [];\n    }\n\n    groupItems.push({\n      labelTitle: formatItemLabelTitle(type, next),\n      label: formatItemLabel(type, next),\n      active: next.toDateString() === now.toDateString(),\n      date: new Date(next)\n    });\n\n    i += 1;\n    last = new Date(next);\n  }\n\n  groups.push({ // add the last group\n    label: formatGroupLabel(type, last),\n    items: groupItems\n  });\n\n  return groups;\n}\n","/**\n * stringifies json object before setting it to storage\n * @returns undefined\n */\nexport const setStorage = (name, data) => {\n  data = typeof data === 'object' ? JSON.stringify(data) : data;\n  localStorage.setItem(name, data);\n};\n/**\n * returns a fully parsed JSON object from storage\n * @returns undefined\n */\nexport const getStorage = (name) => {\n  return JSON.parse(localStorage.getItem(name));\n};\n","export const mobileWidth = 600;\n\n/**\n * takes an interval and determines the values that need to be set in order to zoom.\n * @returns returns a zoom object\n */\nexport const handleZoom = (zoom, up = true) => {\n  let interval = up ? 1 : -1;\n\n  let typeCounts = {\n    'day': [7, 15, 31],\n    'month': [7, 13]\n  };\n\n  if (window.innerWidth < mobileWidth) {\n    typeCounts = {\n      'day': [3, 5],\n      'month': [3, 5]\n    };\n  }\n\n  const types = Object.keys(typeCounts);\n  const type = zoom.type || 'day';\n  const count = zoom.count || typeCounts[type][1];\n  let counts = typeCounts[type];\n\n  let countIndex = counts.indexOf(count) + interval; // update countIndex\n  let typeIndex = types.indexOf(type);\n\n  if (up === null) {\n    interval = 0;\n    countIndex = 0;\n  }\n\n  if (countIndex >= counts.length || countIndex < 0) {\n    typeIndex += interval; // update typeIndex\n    counts = typeCounts[types[typeIndex]]; // update counts list\n\n    if (!counts) { // uh-oh it's not there\n        typeIndex = resetValue(types.length); // reset typeIndex\n        counts = typeCounts[types[typeIndex]]; // update counts list\n    }\n\n    countIndex = resetValue(counts.length); // reset typeIndex\n  }\n\n  let height = types[typeIndex] === 'day' ? 1 : .25;\n\n  return {\n    type: types[typeIndex],\n    count: counts[countIndex],\n    max: (typeIndex + 1 >= types.length) &&\n    (countIndex + 1 >= counts.length),\n    min: (typeIndex === 0) &&\n    (countIndex === 0),\n    height: height + (counts.length - countIndex) * .5\n  };\n\n  // common logic to set reset value based on going up or down\n  function resetValue (length) {\n    return up ? 0 : length + interval;\n  }\n};\n\n\nexport const defaultZoomLevel = handleZoom({}, null);\n","/**\n * Takes two dates and determines how many days are inbetween.\n * @returns returns an integer of days\n */\nexport const daysBetween = (startDate, endDate) => {\n  return Math.round((endDate - startDate) / (1000 * 60 * 60 * 24));\n}\n","/**\n * Returns the last day in the month\n * e.g. 30 days in june, 30 would be returned\n * @returns returns integer\n */\nexport const getTotalDaysInMonth = (date) => {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n}\n\n/**\n * Takes two dates and determines how many months are inbetween\n * @returns returns an integer of months\n */\nexport const monthsBetween = (startDate, endDate, offset) => {\n\n  const totalDays = getTotalDaysInMonth(startDate);\n  let offsetByDays = 0;\n\n  if (offset) {\n    offsetByDays += (endDate.getDate()) / totalDays;\n  } else {\n    if (startDate.getMonth() !== endDate.getMonth()) {\n      offsetByDays += (totalDays - startDate.getDate()) / totalDays; // first month days\n      const totalDaysLastMonth = getTotalDaysInMonth(endDate);\n      offsetByDays += ((endDate.getDate()) / getTotalDaysInMonth(endDate)) - 1; // last month days\n    } else {\n      offsetByDays += (endDate.getDate() - startDate.getDate()) / totalDays;\n    }\n  }\n\n  if (!offsetByDays) {\n    offsetByDays = 1 / totalDays;\n  }\n\n  return (endDate.getMonth() - startDate.getMonth()\n      + (12 * (endDate.getFullYear() - startDate.getFullYear())))\n      + offsetByDays;\n}\n","export const timelineItems = [\n  {\n    id: 1,\n    start: \"2021-01-14\",\n    end: \"2021-01-22\",\n    name: \"Recruit translators\",\n  },\n  {\n    id: 2,\n    start: \"2021-01-17\",\n    end: \"2021-01-31\",\n    name: \"Create lesson plan 1\",\n  },\n  {\n    id: 3,\n    start: \"2021-02-05\",\n    end: \"2021-02-13\",\n    name: \"Translate phrases for lesson 1\",\n  },\n  {\n    id: 4,\n    start: \"2021-02-07\",\n    end: \"2021-03-08\",\n    name: \"Create dark mode design\",\n  },\n  {\n    id: 5,\n    start: \"2021-02-14\",\n    end: \"2021-02-22\",\n    name: \"Recruit copyeditors\",\n  },\n  {\n    id: 6,\n    start: \"2021-02-18\",\n    end: \"2021-02-24\",\n    name: \"Proofread translations for lesson 1\",\n  },\n  {\n    id: 7,\n    start: \"2021-02-20\",\n    end: \"2021-02-22\",\n    name: \"Finalize logo\",\n  },\n  {\n    id: 8,\n    start: \"2021-02-21\",\n    end: \"2021-03-22\",\n    name: \"Implement dark mode\",\n  },\n  {\n    id: 9,\n    start: \"2021-02-21\",\n    end: \"2021-02-28\",\n    name: \"Finalize lesson plan 1\",\n  },\n  {\n    id: 10,\n    start: \"2021-02-23\",\n    end: \"2021-02-23\",\n    name: \"Approve logo\",\n  },\n  {\n    id: 11,\n    start: \"2021-03-03\",\n    end: \"2021-03-29\",\n    name: \"Create lesson plan 2\",\n  },\n  {\n    id: 12,\n    start: \"2021-03-30\",\n    end: \"2021-04-08\",\n    name: \"Translate phrases for lesson 2\",\n  },\n  {\n    id: 13,\n    start: \"2021-04-01\",\n    end: \"2021-04-04\",\n    name: \"Debug mobile notification error\",\n  },\n  {\n    id: 14,\n    start: \"2021-04-05\",\n    end: \"2021-04-06\",\n    name: \"Test debugged mobile notifications\",\n  },\n  {\n    id: 15,\n    start: \"2021-04-16\",\n    end: \"2021-04-30\",\n    name: \"Beta test\",\n  },\n  {\n    id: 16,\n    start: \"2021-05-01\",\n    end: \"2021-05-01\",\n    name: \"Launch day\",\n  },\n  {\n    id: 'zxcv',\n    start: \"2021-06-26\",\n    end: \"2021-06-29\",\n    name: \"Something happened on this day\",\n  },\n  {\n    id: 'asdf',\n    start: \"2021-06-28\",\n    end: \"2021-06-30\",\n    name: \"Happy days\",\n  },\n  {\n    id: 'qwer',\n    start: \"2021-07-01\",\n    end: \"2021-07-30\",\n    name: \"Gilligan's Island\",\n  },{\n    id: 111,\n    start: \"2021-07-14\",\n    end: \"2021-01-22\",\n    name: \"Recruit translators\",\n  },\n  {\n    id: 112,\n    start: \"2021-08-17\",\n    end: \"2021-01-31\",\n    name: \"Create lesson plan 1\",\n  },\n  {\n    id: 113,\n    start: \"2021-09-05\",\n    end: \"2021-02-13\",\n    name: \"Translate phrases for lesson 1\",\n  },\n  {\n    id: 114,\n    start: \"2021-07-07\",\n    end: \"2021-03-08\",\n    name: \"Create dark mode design\",\n  },\n  {\n    id: 115,\n    start: \"2021-08-14\",\n    end: \"2021-02-22\",\n    name: \"Recruit copyeditors\",\n  },\n  {\n    id: 116,\n    start: \"2021-09-18\",\n    end: \"2021-02-24\",\n    name: \"Proofread translations for lesson 1\",\n  },\n  {\n    id: 117,\n    start: \"2021-07-20\",\n    end: \"2021-02-22\",\n    name: \"Finalize logo\",\n  },\n  {\n    id: 118,\n    start: \"2021-08-21\",\n    end: \"2021-03-22\",\n    name: \"Implement dark mode\",\n  },\n  {\n    id: 119,\n    start: \"2021-09-21\",\n    end: \"2021-02-28\",\n    name: \"Finalize lesson plan 1\",\n  },\n  {\n    id: 1110,\n    start: \"2021-10-23\",\n    end: \"2021-02-23\",\n    name: \"Approve logo\",\n  },\n  {\n    id: 1111,\n    start: \"2021-11-03\",\n    end: \"2021-03-29\",\n    name: \"Create lesson plan 2\",\n  },\n  {\n    id: 1112,\n    start: \"2021-12-30\",\n    end: \"2021-04-08\",\n    name: \"Translate phrases for lesson 2\",\n  },\n  {\n    id: 1113,\n    start: \"2021-10-01\",\n    end: \"2021-04-04\",\n    name: \"Debug mobile notification error\",\n  },\n  {\n    id: 1114,\n    start: \"2021-11-05\",\n    end: \"2021-04-06\",\n    name: \"Test debugged mobile notifications\",\n  },\n  {\n    id: 1115,\n    start: \"2021-12-16\",\n    end: \"2021-04-30\",\n    name: \"Beta test\",\n  },\n  {\n    id: 1116,\n    start: \"2021-10-01\",\n    end: \"2021-05-01\",\n    name: \"Launch day\",\n  }\n];\n\nexport default timelineItems;\n","export const prefix = 'air';\n","import React, { useEffect } from \"react\";\nimport { prefix } from '../../globals';\nimport classNames from 'classnames';\nimport \"./index.scss\";\n\n/**\n * Takes an array of groups and their children to render labels and grid for the timeline.\n * @returns renders background labels and grid\n */\nconst TimelineContainer = ({ manageEditor, children, onScroll, inView, groups = [] }) => {\n\n  return (\n    <div className={`${prefix}--timeline-bg`} onScroll={onScroll}>\n      {children}\n      <ul className={`${prefix}--timeline-bg__groups`}>\n      {groups.map(({ label, items }) => {\n        return (\n          <li key={label}>\n            <p className={`${prefix}--timeline-bg__group-label`}>\n              <span>{label}</span>\n            </p>\n            <ul className={`${prefix}--timeline-bg__items`}>\n              {items.map(({ date, label, labelTitle, active }) => {\n                return (\n                  <li onClick={newEvent}\n                    data-date={date}\n                    className={classNames(`${prefix}--timeline-bg__item`, active ? `${prefix}--timeline-bg--item-active` : '')}\n                    key={labelTitle}\n                    title={labelTitle}\n                    style={{ width: `calc((100vw - 2rem) / ${inView})` }}>\n                    {label}\n                  </li>\n                );\n              })}\n            </ul>\n          </li>\n        );\n      })}\n      </ul>\n    </div>\n  );\n\n  function newEvent (e) {\n    const startDate = new Date(e.target.dataset['date']);\n\n    manageEditor({\n      isOpen: true,\n      startDate: `${startDate.getMonth() + 1}/${startDate.getDate()}/${startDate.getFullYear()}`\n    });\n  }\n}\n\nexport default TimelineContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { prefix } from '../../globals';\nimport { daysBetween, monthsBetween } from '../../utilities';\nimport classNames from 'classnames';\nimport \"./index.scss\";\n\n/**\n * Takes an array of events and renders them on the page\n * @returns renders events\n */\nconst TimelineEvents = ({ manageEditor, zoom, startRangeDate, lanes = [] }) => {\n  const [hideEvents, setHideEvents] = useState(`${prefix}--timeline-events--hide`);\n  const now = new Date();\n  const nowTickerPosition = (zoom.type === 'month') ? monthsBetween(startRangeDate, now, true) - 1 : daysBetween(startRangeDate, now);\n\n  useEffect(() => {\n    console.log(lanes);\n    setHideEvents('');\n  }, [])\n\n  return (\n    <div className={classNames(`${prefix}--timeline-events`, hideEvents)}>\n      <ul>\n        {lanes.map((lane, i) => {\n          console.log(lanes);\n          return (lane.map((event) => {\n            const gutter = .25;\n            const startDate = new Date(event.start + ' 00:00:00');\n            const endDate = new Date(event.end + ' 23:59:59');\n\n            const itemSpan = (zoom.type === 'month') ? monthsBetween(startDate, endDate) : daysBetween(startDate, endDate);\n            const itemOffset = (zoom.type === 'month') ? monthsBetween(startRangeDate, startDate, true) - 1 : daysBetween(startRangeDate, startDate) - 1;\n\n            const expired = now >= endDate;\n            const expiredClass = expired ? `${prefix}--timeline-event--expired` : '';\n            const expiredText = expired ? `(expired) ` : '';\n\n            return (\n              <li\n                style={{\n                  minHeight: zoom.height + 'rem',\n                  left: `calc((100vw - 2rem) / ${zoom.count} * ${itemOffset} + ${gutter/2}rem)`,\n                  top: `${(zoom.height + gutter) * i}rem`,\n                  width: `calc((100vw - 2rem) / ${zoom.count} * ${itemSpan} - ${gutter}rem)`,\n                  borderRadius: `${(zoom.height / 2)}rem`,\n                  transitionDelay: i * 150 + 'ms'\n                }}\n                data-event={JSON.stringify(event)}\n                title={`${expiredText}${event.name}: ${event.start} – ${event.end}` }\n                key={event.start + event.end}\n                className={classNames(`${prefix}--timeline-event`, `${prefix}--timeline-event--${zoom.type}`, `${prefix}--timeline-event--${zoom.count}`, expiredClass)}\n                onClick={editEvent}>\n                <span className={`${prefix}--timeline-event__title`}>{event.name}</span>\n              </li>\n            );\n          }));\n        })}\n      </ul>\n    </div>\n  );\n\n  function editEvent (e) {\n    const event = JSON.parse(e.target.dataset.event);\n    manageEditor({ isOpen: true, event: event });\n  }\n}\n\nexport default TimelineEvents;\n","import React from \"react\";\nimport classNames from 'classnames';\nimport { prefix } from '../../globals';\nimport \"./index.scss\";\n\nconst Button = ({ type, children, className, href, ...otherProps}) => {\n\n  let CompBtn = href ? 'a' : 'button';\n\n  return (\n    <CompBtn href={href}\n       className={classNames(`${prefix}--button`, `${prefix}--button--${type}`, className)}\n      {...otherProps}>\n      {children}\n    </CompBtn>\n  );\n}\n\nexport default Button;\n","import React, { useState, useEffect } from \"react\";\nimport { prefix } from '../../globals';\nimport { handleZoom, mobileWidth, getStorage, setStorage, defaultZoomLevel } from '../../utilities';\nimport classNames from 'classnames';\nimport Button from '../Button/Button';\nimport \"./index.scss\";\n\nlet init = false;\n\n/**\n * Set of controls that changes the zoom settings\n * @returns renders buttons\n */\nconst Zoom = ({ onZoom }) => {\n  const [zoom, setZoom] = useState(getStorage('air-zoom') || defaultZoomLevel);\n  const [screenSize, setScreenSize] = useState((window.innerWidth < mobileWidth) ? 'mobile' : 'desktop');\n\n  function changeZoom (zoom, upDown) {\n    const newZoom = handleZoom(zoom, upDown);\n\n    setZoom(newZoom);\n    setStorage('air-zoom', newZoom);\n    onZoom(newZoom);\n  }\n\n  useEffect(() => {\n    if (init) { // ignore first render\n      changeZoom(defaultZoomLevel, null);\n    }\n  }, [screenSize]);\n\n  useEffect(() => {\n    init = true;\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth < mobileWidth) {\n        setScreenSize('mobile');\n      } else {\n        setScreenSize('desktop');\n      }\n    });\n  }, []);\n\n  return (\n    <aside className={`${prefix}--zoom`}>\n      <Button\n        aria-label=\"Zoom out\"\n        onClick={() => changeZoom(zoom, true)}\n        disabled={zoom.max}>\n        <i className=\"fas fa-minus\"></i>\n      </Button>\n      <Button\n        aria-label=\"Zoom in\"\n        onClick={() => changeZoom(zoom, false)}\n        disabled={zoom.min}>\n        <i className=\"fas fa-plus\"></i>\n      </Button>\n    </aside>\n  );\n}\n\nexport default Zoom;\n","import React, { useState, useEffect } from \"react\";\nimport { getStorage, setStorage, dayInMs, createGroups, defaultZoomLevel, assignLanes } from '../../utilities';\nimport { prefix } from '../../globals';\nimport classNames from 'classnames';\nimport TimelineContainer from '../TimelineContainer/TimelineContainer';\nimport TimelineEvents from '../TimelineEvents/TimelineEvents';\nimport Zoom from '../Zoom/Zoom';\nimport \"./index.scss\";\n\nlet rangeChanged = false;\nlet centered = false;\n\nconst Timeline = ({ events, manageEditor }) => {\n  const storedZoom = getStorage('air-zoom') || defaultZoomLevel;\n  let startDate = new Date();\n  let endDate = new Date();\n  const [zoom, setZoom] = useState(storedZoom);\n  const [startRange, setStartRange] = useState(Math.floor(storedZoom.count / 2) + 1);\n  const [endRange, setEndRange] = useState(Math.floor(storedZoom.count / 2) + 1);\n\n  if (zoom.type === 'month') {\n    startDate.setDate(1);\n    startDate.setMonth(startDate.getMonth() - (startRange + 1));\n    endDate.setDate(1);\n    endDate.setMonth(endDate.getMonth() + endRange);\n  } else {\n    startDate.setDate(startDate.getDate() - (startRange + 1));\n    endDate.setDate(endDate.getDate() + endRange);\n  }\n\n  useEffect(centerOnLoad, []);\n\n  return (\n    <article className={classNames(`${prefix}--timeline`)}>\n      <TimelineContainer\n        manageEditor={manageEditor}\n        onScroll={infiniteScroll}\n        groups={createGroups(zoom.type, startDate, endDate)}\n        inView={zoom.count}>\n          <TimelineEvents\n            manageEditor={manageEditor}\n            lanes={organizeEvents()}\n            zoom={zoom}\n            startRangeDate={startDate} />\n      </TimelineContainer>\n      <Zoom onZoom={onZoom} />\n    </article>\n  );\n\n  function organizeEvents () {\n    let lanes = assignLanes(events);\n\n    lanes = lanes.map(lane => {\n      return lane.filter(event => dateInRange(event))\n    });\nconsole.log(lanes);\n    return lanes;\n  }\n\n  function onZoom (zoomLevel) {\n    const count = Math.floor(zoomLevel.count / 2) + 1;\n    setZoom(zoomLevel);\n\n    // update ranges if smaller zoom count\n    if (startRange < count || !rangeChanged) {\n      setStartRange(count);\n    }\n\n    if (endRange < count || !rangeChanged) {\n      setEndRange(count);\n    }\n  }\n\n  // allows for infinite scrolling of dates and events, and sets new date range\n  function infiniteScroll (e) {\n    if (centered && !window.infinityScroll) {\n      const timelineBg = e.target;\n      const item = timelineBg.querySelectorAll(`.${prefix}--timeline-bg__item`);\n      const groups = timelineBg.querySelector(`.${prefix}--timeline-bg__groups`);\n      const events = timelineBg.querySelector(`.${prefix}--timeline-events`);\n\n      const itemWidth = groups.scrollWidth / item.length;\n      const updateBy = Math.floor(zoom.count / 2) + 1;\n\n      if (timelineBg.scrollLeft <= itemWidth * .95) {\n        timelineBg.scroll({\n          left: ((updateBy + 1) * itemWidth)\n        });\n\n        setStartRange(startRange + updateBy);\n        rangeChanged = true;\n      } else if (timelineBg.scrollLeft >= (groups.scrollWidth - groups.offsetWidth - itemWidth * .95)) {\n\n        setEndRange(endRange + updateBy);\n        rangeChanged = true;\n      }\n    }\n  }\n\n  // intended to center the scroll area on load.\n  function centerOnLoad () {\n      const timelineBg = document.querySelector(`.${prefix}--timeline-bg`);\n      const offset = (timelineBg.scrollWidth - timelineBg.offsetWidth) / 2;\n\n      timelineBg.scroll({\n        left: offset + 8\n      });\n\n      centered = true;\n  }\n\n  function dateInRange (event) {\n    const start = new Date(event.start + ' 00:00:00');\n    const end = new Date(event.end + ' 23:59:59');\n\n    return (start >= startDate && start <= endDate) || (end >= startDate && end <= endDate);\n  }\n}\n\nexport default Timeline;\n","/**\n * Takes an array of items and assigns them to lanes based on start/end dates.\n * @returns an array of arrays containing items.\n */\nexport const assignLanes = (items) =>  {\n    const sortedItems = items.sort((a, b) =>\n        new Date(a.start) - new Date(b.start)\n    );\n    const lanes = [];\n\n    function assignItemToLane(item) {\n        for (const lane of lanes) {\n            // last item in lane's end date < item start date\n            // could be event at same time\n            if (new Date(lane[lane.length - 1].end) < new Date(item.start)) {\n                lane.push(item);\n                return;\n            }\n        }\n        // [[item], [item, item, item]] // 2 lanes\n        lanes.push([item]);\n    }\n\n    for (const item of sortedItems) {\n        assignItemToLane(item);\n    }\n\n    return lanes;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { prefix } from '../../globals';\nimport { setStorage, getStorage } from '../../utilities';\nimport classNames from 'classnames';\nimport Button from '../Button/Button';\nimport \"./index.scss\";\n\n/**\n * Switches the theme of the page\n * @returns changes page theme\n */\nconst ThemeSwitcher = () => {\n  const [theme, setTheme] = useState(getStorage('air-theme') || false);\n\n  useEffect(onThemeChange);\n\n  function onThemeChange () {\n    if (theme) {\n      document.body.classList.add(`${prefix}--theme--dark`);\n    } else {\n      document.body.classList.remove(`${prefix}--theme--dark`);\n    }\n  }\n\n  function changeTheme (e) {\n    const checked = e.target.checked;\n    setTheme(checked);\n    setStorage('air-theme', checked);\n  }\n\n  return (\n    <label className={`${prefix}--theme-switcher`} title=\"Switch themes\" aria-label=\"Switch themes\">\n      <input type=\"checkbox\" checked={theme} onChange={changeTheme} />\n      <span className={`${prefix}--button`}>\n        <i className={classNames('fas', theme ? 'fa-sun' : 'fa-moon')}></i>\n      </span>\n    </label>\n  );\n}\n\nexport default ThemeSwitcher;\n","import React, { useState, useEffect } from \"react\";\nimport classNames from 'classnames';\nimport { prefix } from '../../globals';\nimport Button from '../Button/Button';\nimport \"./index.scss\";\n\nconst Modal = ({ onClose, settings, isOpen, children, className, ...otherProps }) => {\n\n  let open = isOpen ? `${prefix}--modal--open` : '';\n\n  return (\n    <aside className={classNames(`${prefix}--modal`, open)}>\n      <div className={classNames(`${prefix}--modal__container`, className)}>\n        <Button className={`${prefix}--modal__close`} aria-label=\"Close\" onClick={closeModal}>\n          <i className=\"fas fa-times\"></i>\n        </Button>\n        {children}\n      </div>\n      <div className={`${prefix}--modal__bg`} onClick={closeModal}></div>\n    </aside>\n  );\n\n  function closeModal () {\n    settings({ isOpen: false });\n    onClose();\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport classNames from 'classnames';\nimport { prefix } from '../../globals';\nimport \"./index.scss\";\n\nconst Input = ({ className, ...otherProps }) => {\n\n  return (\n    <input\n      className={classNames(`${prefix}--input`, className)}\n      {...otherProps}\n    />\n  );\n}\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport classNames from 'classnames';\nimport { prefix } from '../../globals';\nimport Modal from '../Modal/Modal';\nimport Button from '../Button/Button';\nimport Input from '../Input/Input';\nimport \"./index.scss\";\n\nconst EventEditor = ({ events, setEvents, settings, editorStatus, ...otherProps}) => {\n\n  let actionTitle = editorStatus.event ? 'Edit' : 'New';\n  let id = Math.round(Math.random() * 1000);\n  let start = editorStatus.startDate || '';\n  let end = '';\n  let name = '';\n\n  if (editorStatus.event) {\n    id = editorStatus.event.id || id;\n    start = editorStatus.event.start;\n    end = editorStatus.event.end || end;\n    name = editorStatus.event.name || name;\n  }\n\n  return (\n    <Modal\n      className={`${prefix}--timeline-editor`}\n      isOpen={editorStatus.isOpen}\n      settings={settings}\n      onClose={close}>\n      {editorStatus.isOpen && (\n        <form\n          className={`${prefix}--timeline-editor__form`}\n          onSubmit={saveEvent}>\n           <h2 className={`${prefix}--timeline-editor__title`}>{actionTitle} event</h2>\n           <div\n              className={`${prefix}--timeline-editor__group`}>\n             <label\n                className={`${prefix}--timeline-editor__label`}\n                htmlFor=\"name\">Event name</label>\n             <Input\n                className={`${prefix}--timeline-editor__input`}\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                defaultValue={name} />\n           </div>\n           <div\n              className={`${prefix}--timeline-editor__group`}>\n             <label\n                className={`${prefix}--timeline-editor__label`}\n                htmlFor=\"start\">Start date</label>\n             <Input\n                className={`${prefix}--timeline-editor__input`}\n                type=\"text\"\n                name=\"start\"\n                id=\"start\"\n                placeholder=\"mm/dd/yyyy\"\n                defaultValue={start} />\n           </div>\n           <div\n              className={`${prefix}--timeline-editor__group`}>\n             <label\n                className={`${prefix}--timeline-editor__label`}\n                htmlFor=\"end\">End date</label>\n             <Input\n                className={`${prefix}--timeline-editor__input`}\n                type=\"text\"\n                name=\"end\"\n                id=\"end\"\n                placeholder=\"mm/dd/yyyy\"\n                defaultValue={end} />\n           </div>\n           <input type=\"hidden\" name=\"id\" id=\"id\" defaultValue={id} />\n           <Button\n              className={`${prefix}--timeline-editor__btn`}\n              type=\"primary\">Save</Button>\n              {(actionTitle === 'Edit') && (\n                 <Button\n                    className={`${prefix}--timeline-editor__btn`}\n                    type=\"danger\" aria-label=\"Delete\" onClick={deleteEvent}>\n                    <i className=\"fas fa-trash-alt\"></i>\n                 </Button>\n              )}\n         </form>\n       )}\n    </Modal>\n  );\n\n  function getData (target) {\n    const data = {};\n    const form = document.querySelector(`.${prefix}--timeline-editor__form`);\n    const formData = new FormData(form);\n\n    for (var [key, value] of formData.entries()) {\n      data[key] = value;\n    }\n\n    if (!data.end) {\n      data.end = data.start;\n    }\n\n    if (!data.name) {\n      data.name = `${data.start}-${data.end}`;\n    }\n\n    return data;\n  }\n\n  function deleteEvent (e) {\n    e.preventDefault();\n    const data = getData();\n    const i = getEventIndex(events, data.id);\n\n    if (events[i]) {\n      events.splice(i, 1);\n    }\n\n    setEvents(events);\n    close();\n  }\n\n  function saveEvent (e) {\n    e.preventDefault();\n    const data = getData();\n    const i = getEventIndex(events, data.id);\n\n    if (events[i]) {\n      events[i] = data;\n    } else {\n      events.push(data);\n    }\n\n    setEvents(events);\n    close();\n  }\n\n  function getEventIndex(events, id) {\n    let ref;\n\n    events.forEach((event, i) => {\n      if ('' + event.id === id) {\n        ref = i;\n      }\n    });\n\n    return ref;\n  }\n\n  function close () {\n    settings({\n      isOpen: false,\n      startDate: '',\n      event: {\n        name: '',\n        id: '',\n        start: '',\n        end: ''\n      }\n    });\n  }\n\n}\n\nexport default EventEditor;\n","import React from \"react\";\nimport { prefix } from '../../globals';\nimport ThemeSwitcher from '../ThemeSwitcher/ThemeSwitcher';\nimport Button from '../Button/Button';\nimport EventEditor from '../EventEditor/EventEditor';\nimport Today from '../Today/Today';\nimport classNames from 'classnames';\nimport \"./index.scss\";\n\n/**\n * Contains and lists the a toolbar of controls\n * @returns lists out a controls for page\n */\nconst Controls = ({ manageEditor }) => {\n  return (\n    <aside className={`${prefix}--controls`}>\n      <ul className={`${prefix}--controls__group`}>\n        <li className={`${prefix}--controls__group-divider`}>\n          <Button type=\"primary\" onClick={newEvent}>\n            New event\n          </Button>\n        </li>\n        <li>\n          <Today />\n        </li>\n        <li>\n          <ThemeSwitcher />\n        </li>\n      </ul>\n    </aside>\n  );\n\n  function newEvent () {\n    manageEditor({ isOpen: true });\n  }\n}\n\nexport default Controls;\n","import React, { useState } from \"react\";\nimport { prefix } from '../../globals';\nimport { getStorage, setStorage } from '../../utilities';\nimport Controls from '../Controls/Controls';\nimport classNames from 'classnames';\nimport \"./index.scss\";\n\nconst storedTitle = getStorage('air-title') || { val: 'Timeline' };\n\n/**\n * Renders the page header and controls\n * @returns renders page header\n */\nconst Header = ({ manageEditor }) => {\n  const [title, setTitle] = useState(storedTitle);\n\n  return (\n    <header className={`${prefix}--header`}>\n      <Controls manageEditor={manageEditor} />\n      <h1\n        onKeyUp={(e) => {\n          setStorage('air-title', { val: e.target.innerText })\n        }}\n        className={`${prefix}--page-title`}\n        suppressContentEditableWarning={true}\n        contentEditable=\"true\">{title.val}</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport { reformatDates, getStorage, setStorage } from './utilities';\nimport timelineItems from \"./data/timelineItems\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport Header from \"./components/Header/Header\";\nimport EventEditor from \"./components/EventEditor/EventEditor\";\nimport defaultEvents from './data/timelineItems';\nimport \"./index.scss\";\n\nif (!getStorage('air-events')) {\n  setStorage('air-events', reformatDates(defaultEvents));\n}\n\nconst App = () => {\n\n  const [editorStatus, setEditorStatus] = useState({});\n  const [events, setEvents] = useState(getStorage('air-events') || []);\n\n  return (\n    <>\n      <Header manageEditor={manageEditor} />\n      <Timeline\n        manageEditor={manageEditor}\n        events={events}\n      />\n      <EventEditor\n        editorStatus={editorStatus}\n        settings={manageEditor}\n        events={events}\n        setEvents={updateEvents}\n      />\n    </>\n  );\n\n  function manageEditor (status) {\n    setEditorStatus(status);\n  }\n\n  function updateEvents (events) {\n    setEvents(events);\n    setStorage('air-events', events);\n  }\n};\n\nrender(<App />, document.getElementById(\"root\"));\n","/**\n * dates from the data provided aren't supported across all browsers.\n * this function reformats the date string that can work across all browsers.\n * going from unsupported `yyyy-mm-dd` to a cross browser support `mm-dd-yyy`\n * @returns returns date string\n */\nexport const reformatDates = (events) => {\n  return events.map(event => {\n    const startSplit = event.start.split('-');\n    const endSplit = event.end.split('-');\n\n    startSplit.push(startSplit.shift());\n    endSplit.push(endSplit.shift());\n\n    event.start = startSplit.join('/');\n    event.end = endSplit.join('/');\n\n    return event;\n  });\n}\n"],"sourceRoot":""}